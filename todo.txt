-Prevent numerous of same sounds from being played at once
-AI isn't working well for CTF, not going after flag
-Make AI climb speed slower
-AI should switch weapons that have no ammo
-AI Use charged weapons

-System of abstraction for handling collisions between entities
  -Electric spark should destroy charged rolling shield, but not regular
  -Enemy bullets should destroy homing torpedo, but not friendly ones
  -Enemies should trigger with sled, but not allies
-Bug: when 2 projectiles are right inside each other, they behave strangely. investigate
-MTV issue:
  -MTV issue: log it to a DB or somewhere whenever it happens
  -MTV occasionally snaps out too far
  -Some MTV issues (snapping out). Test the climb in gallery stage, and inclines
  -Build a visual collision tester?
-DOM nodes growing and not getting GC'd
-Have a level loading screen that only loads level backgrounds/music
-Jerky animations again
-Sprite transitions screw up win animation alignment

-Stage music continues playing in menu if quit right when it starts
-If pushing against wall don't play run animation
-Soft collision with allies
-Walls stop weapons

===============
Neat
===============
Game balancing: add costs to the weapon charges
fire wave: don't fall if off a ledge, stay on it
Add pickups to map

===============
Abstraction
===============
-Investigate why debugging in Chrome is broken
-CheckCollisionActor, add gameobject array param
-Object instantiation

===============
Optimization
===============

-Performance concerns: death effect, change sprite indexof 
-Figure out how to measure GPU performance precisely
-Avoid new's
-Object pool for actors
-Only draw things on-screen
-Use particle containers for:
  -HUD stuff
  -Backgrounds
  -Effects

===============
Level editor
===============
-Rename sprites/levels/etc
-Remember last tool used and keep it open
-Basic undo
-The json data binding is weird/has issues
-be able to select under images/change z-order
-Rectangle select on the spritesheet canvas

========================
LEVEL EDITOR DOCS
========================
Non-serializable code locations:
helpers.js: Search for 
  function serializeES6(obj) {
levelEditor.js: Search for
  saveLevel() {
sprite path saving is automatic using the name. 
onDeserialize() and onSerialize() of the classes that you are deserializing/serializing.

{
  "nodeName": "",
  "ladderName": "",
  "isJumpNode": false,
  "isDropNode": false,
  "isLadderNode": false
}